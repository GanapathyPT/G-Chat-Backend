{"version":3,"sources":["types/authTypes.ts","actions/auth/authActions.ts","actions/auth/AuthReducer.ts","actions/auth/AuthContext.tsx","components/AppLoader.tsx","components/Login.tsx","containers/LoginContainer.tsx","components/Register.tsx","containers/RegisterContainer.tsx","actions/users/usersActions.ts","components/subComponents/ChatBox.tsx","components/subComponents/SideBar.tsx","components/Home.tsx","containers/HomeContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthStatus","ActionTypes","AuthActionType","ACCESS_TOKEN","REFRESH_TOKEN","saveLocalStorage","key","value","localStorage","setItem","login","email","password","a","requestOptions","method","headers","Accept","body","JSON","stringify","fetch","response","json","data","accessToken","refreshToken","register","username","token","getItem","error","undefined","getUserDetails","parse","atob","split","Authorization","friendsData","_id","friends","result","logout","removeItem","googleAuth","id","SOCKET_URL","process","initialState","authStatus","NOT_AUTHENTICATED","userInfo","socket","authReducer","state","action","type","SET_USERINFO","payload","SET_AUTHSTATUS","UPDATE_USERINFO","SET_SOCKET","customAuthDispatch","dispatch","REGISTER","LOGIN","AUTHENTICATE","LOGOUT","SOCIAL_AUTH","AUTHENTICATION_LOADING","errors","AUTHENTICATED","connect","loading","authenticated","AuthContext","createContext","AuthProvider","children","useReducer","contextValue","authInfo","Provider","AppLoader","Dimmer","active","inverted","Loader","size","Login","loginUser","onSuccess","useState","setEmail","setPassword","setError","className","Card","color","raised","Form","onSubmit","Input","label","placeholder","icon","iconPosition","onChange","e","target","Divider","horizontal","Field","clientId","REACT_APP_GOOGLE_CLIENT_ID","buttonText","cookiePolicy","Button","primary","to","LoginContainer","useContext","useCallback","allErrors","forEach","param","msg","gResponse","tokenId","Register","registerUser","setUsername","RegisterContainer","getUser","query","URLSearchParams","q","addFriend","newFriend","getTime","date","hours","Date","getHours","time","getMinutes","ChatBox","messages","sendMessage","deSelectUser","message","setMessage","ref","useRef","useEffect","current","scrollIntoView","Segment","Icon","name","onClick","Popup","trigger","content","Message","warning","header","success","map","author","timestamp","autoFocus","onKeyPress","charCode","labelPosition","usersAvatar","SideBar","onResultSelect","onSearchChange","results","activeUser","userOnClick","logoutUser","Search","Dropdown","simple","direction","Menu","Item","List","animated","celled","friend","Image","avatar","src","Math","floor","random","length","Content","Header","Description","Home","messagesLoading","Grid","columns","divided","GridRow","GridColumn","computer","mobile","textAlign","as","Subheader","HomeContainer","setValue","setLoading","setResults","setActiveUser","setMessages","setMessagesLoading","on","newMessage","oldMessages","alert","searchUser","users","filter","user","title","description","oldFriends","find","emit","roomId","event","trim","App","authenticate","showLoading","interval","setInterval","clearInterval","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87216a09.chunk.js","sourcesContent":["import { User } from \"./userTypes\";\n\ninterface AuthError {\n\tvalue?: string;\n\tmsg: string;\n\tparam: string;\n\tlocation?: string;\n}\n\ninterface AuthResponse {\n\terrors: [AuthError] | null;\n\taccessToken?: string;\n\trefreshToken?: string;\n}\n\ninterface RegisterErrors {\n\tusername?: string;\n\temail?: string;\n\tpassword?: string;\n}\n\ninterface LoginErrors {\n\temail?: string;\n\tpassword?: string;\n}\n\ninterface UserInfo {\n\t_id?: string;\n\tusername?: string;\n\temail?: string;\n\tfriends?: User[];\n}\n\n// Reducer and context related\nenum AuthStatus {\n\tNOT_AUTHENTICATED = 0,\n\tAUTHENTICATED = 1,\n\tAUTHENTICATION_LOADING = 2,\n}\n\ninterface AuthInfo {\n\tauthStatus: AuthStatus;\n\tuserInfo: UserInfo;\n\tsocket: SocketIOClient.Socket | null;\n}\n\ninterface AuthContextType {\n\tauthInfo: AuthInfo;\n\tdispatch: (action: Actions) => Promise<AuthError[] | undefined>;\n}\n\n// actions related\n\nenum ActionTypes {\n\tREGISTER = 0,\n\tLOGIN = 1,\n\tLOGOUT = 2,\n\tAUTHENTICATE = 3,\n\tUPDATE_USERINFO = 4,\n\tSOCIAL_AUTH = 5,\n}\n\ninterface Register {\n\ttype: ActionTypes.REGISTER;\n\tpayload: {\n\t\tusername: string;\n\t\temail: string;\n\t\tpassword: string;\n\t};\n}\n\ninterface Login {\n\ttype: ActionTypes.LOGIN;\n\tpayload: {\n\t\temail: string;\n\t\tpassword: string;\n\t};\n}\n\ninterface Authenticate {\n\ttype: ActionTypes.AUTHENTICATE;\n\tpayload: {\n\t\tloading: boolean;\n\t};\n}\n\ninterface UpdateUserInfo {\n\ttype: ActionTypes.UPDATE_USERINFO;\n\tpayload: Partial<UserInfo>;\n}\n\ninterface SocialLogin {\n\ttype: ActionTypes.SOCIAL_AUTH;\n\tpayload: {\n\t\ttoken: string;\n\t};\n}\n\ninterface Logout {\n\ttype: ActionTypes.LOGOUT;\n}\n\ntype Actions =\n\t| Register\n\t| Login\n\t| Authenticate\n\t| UpdateUserInfo\n\t| SocialLogin\n\t| Logout;\n\n// reducer related\nenum AuthActionType {\n\tSET_USERINFO = 0,\n\tSET_AUTHSTATUS = 1,\n\tUPDATE_USERINFO = 2,\n\tSET_SOCKET = 4,\n}\n\ninterface SetUserInfo {\n\ttype: AuthActionType.SET_USERINFO;\n\tpayload: UserInfo;\n}\n\ninterface SetAuthStatus {\n\ttype: AuthActionType.SET_AUTHSTATUS;\n\tpayload: AuthStatus;\n}\n\ninterface Update {\n\ttype: AuthActionType.UPDATE_USERINFO;\n\tpayload: Partial<UserInfo>;\n}\n\ninterface SetSocket {\n\ttype: AuthActionType.SET_SOCKET;\n\tpayload: SocketIOClient.Socket | null;\n}\n\ntype AuthAction = SetUserInfo | SetAuthStatus | Update | SetSocket;\n\nexport type {\n\tAuthResponse,\n\tRegisterErrors,\n\tLoginErrors,\n\tAuthContextType,\n\tUserInfo,\n\tAuthInfo,\n\tAuthAction,\n\tActions,\n\tAuthError,\n};\n\nexport { AuthStatus, AuthActionType, ActionTypes };\n","import { AuthResponse, UserInfo } from \"../../types/authTypes\";\nimport { User } from \"../../types/userTypes\";\n\nconst ACCESS_TOKEN = \"access-token\";\nconst REFRESH_TOKEN = \"refresh-token\";\n\nconst saveLocalStorage = (key?: string, value?: string) => {\n\tkey && value && localStorage.setItem(key, value);\n};\n\nconst login = async (\n\temail: string,\n\tpassword: string\n): Promise<AuthResponse> => {\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ email, password }),\n\t};\n\n\tconst response = await fetch(\"/api/auth/login\", requestOptions);\n\tconst data: AuthResponse = await response.json();\n\tsaveLocalStorage(ACCESS_TOKEN, data.accessToken);\n\tsaveLocalStorage(REFRESH_TOKEN, data.refreshToken);\n\n\treturn data;\n};\n\nconst register = async (\n\tusername: string,\n\temail: string,\n\tpassword: string\n): Promise<AuthResponse> => {\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ username, email, password }),\n\t};\n\n\tconst response = await fetch(\"/api/auth/register\", requestOptions);\n\tconst data: AuthResponse = await response.json();\n\tsaveLocalStorage(ACCESS_TOKEN, data.accessToken);\n\tsaveLocalStorage(REFRESH_TOKEN, data.refreshToken);\n\n\treturn data;\n};\n\nconst refreshToken = async (): Promise<boolean> => {\n\tconst token = localStorage.getItem(\"refresh-token\");\n\tif (token === null) return false;\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ refreshToken: token }),\n\t};\n\tconst response = await fetch(\"/api/auth/refresh\", requestOptions);\n\tconst {\n\t\terror,\n\t\taccessToken,\n\t}: {\n\t\terror?: string;\n\t\taccessToken?: string;\n\t} = await response.json();\n\tsaveLocalStorage(\"access-token\", accessToken);\n\treturn error === undefined;\n};\n\nconst getUserDetails = async (): Promise<UserInfo | null> => {\n\ttry {\n\t\tconst token = localStorage.getItem(\"access-token\");\n\t\tif (token) {\n\t\t\tconst data = JSON.parse(atob(token.split(\".\")[1])) as UserInfo;\n\t\t\tconst requestOptions: RequestInit = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst response = await fetch(\"/api/user/friends\", requestOptions);\n\t\t\tconst friendsData: { result: User[] } = await response.json();\n\n\t\t\treturn {\n\t\t\t\t_id: data._id,\n\t\t\t\temail: data.email,\n\t\t\t\tusername: data.username,\n\t\t\t\tfriends: friendsData.result,\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t} catch {\n\t\treturn null;\n\t}\n};\n\nconst logout = async (): Promise<void> => {\n\tconst token = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t};\n\tawait fetch(\"/api/auth/logout\", requestOptions);\n\tlocalStorage.removeItem(\"access-token\");\n\tlocalStorage.removeItem(\"refresh-token\");\n};\n\nconst googleAuth = async (id: string): Promise<AuthResponse> => {\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAccept: \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ token: id }),\n\t};\n\n\tconst response = await fetch(\"/api/auth/googleAuth\", requestOptions);\n\tconst data: AuthResponse = await response.json();\n\tsaveLocalStorage(ACCESS_TOKEN, data.accessToken);\n\tsaveLocalStorage(REFRESH_TOKEN, data.refreshToken);\n\n\treturn data;\n};\n\nexport { login, register, getUserDetails, refreshToken, logout, googleAuth };\n","import { Dispatch } from \"react\";\nimport {\n\tAuthInfo,\n\tAuthAction,\n\tAuthStatus,\n\tAuthActionType,\n\tActions,\n\tActionTypes,\n\tAuthError,\n} from \"../../types/authTypes\";\nimport {\n\tgetUserDetails,\n\tgoogleAuth,\n\tlogin,\n\tlogout,\n\trefreshToken,\n\tregister,\n} from \"./authActions\";\nimport { connect } from \"socket.io-client\";\n\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL as string;\n\nconst initialState: AuthInfo = {\n\tauthStatus: AuthStatus.NOT_AUTHENTICATED,\n\tuserInfo: {},\n\tsocket: null,\n};\n\nconst authReducer = (state: AuthInfo, action: AuthAction) => {\n\tswitch (action.type) {\n\t\tcase AuthActionType.SET_USERINFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserInfo: action.payload,\n\t\t\t};\n\n\t\tcase AuthActionType.SET_AUTHSTATUS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthStatus: action.payload,\n\t\t\t};\n\n\t\tcase AuthActionType.UPDATE_USERINFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserInfo: {\n\t\t\t\t\t...state.userInfo,\n\t\t\t\t\t...action.payload,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase AuthActionType.SET_SOCKET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsocket: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst customAuthDispatch = (dispatch: Dispatch<AuthAction>) => async (\n\taction: Actions\n): Promise<[AuthError] | undefined> => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.REGISTER: {\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\tpayload: AuthStatus.AUTHENTICATION_LOADING,\n\t\t\t});\n\t\t\tconst { email, password, username } = action.payload;\n\t\t\tconst { errors } = await register(username, email, password);\n\t\t\tif (errors === null) {\n\t\t\t\tconst userInfo = await getUserDetails();\n\t\t\t\tif (userInfo !== null) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\t\t\tpayload: userInfo,\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t\t\tconst socket = connect(SOCKET_URL);\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\t\t\tpayload: socket,\n\t\t\t\t\t});\n\t\t\t\t} else\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t});\n\t\t\t\treturn errors;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.LOGIN: {\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\tpayload: AuthStatus.AUTHENTICATION_LOADING,\n\t\t\t});\n\t\t\tconst { email, password } = action.payload;\n\t\t\tconst { errors } = await login(email, password);\n\t\t\tif (errors === null) {\n\t\t\t\tconst userInfo = await getUserDetails();\n\t\t\t\tif (userInfo !== null) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\t\t\tpayload: userInfo,\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t\t\tconst socket = connect(SOCKET_URL);\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\t\t\tpayload: socket,\n\t\t\t\t\t});\n\t\t\t\t} else\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t});\n\t\t\t\treturn errors;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.AUTHENTICATE: {\n\t\t\tconst { loading } = action.payload;\n\t\t\tloading &&\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: AuthStatus.AUTHENTICATION_LOADING,\n\t\t\t\t});\n\n\t\t\tconst authenticated = await refreshToken();\n\t\t\tif (authenticated) {\n\t\t\t\tconst userInfo = await getUserDetails();\n\t\t\t\tif (userInfo !== null) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\t\t\tpayload: userInfo,\n\t\t\t\t\t});\n\t\t\t\t\tif (loading) {\n\t\t\t\t\t\tconst socket = connect(SOCKET_URL);\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\t\t\t\tpayload: socket,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\tpayload: authenticated\n\t\t\t\t\t? AuthStatus.AUTHENTICATED\n\t\t\t\t\t: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t});\n\n\t\t\tloading &&\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: authenticated\n\t\t\t\t\t\t? AuthStatus.AUTHENTICATED\n\t\t\t\t\t\t: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.LOGOUT: {\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\tpayload: AuthStatus.AUTHENTICATION_LOADING,\n\t\t\t});\n\t\t\tawait logout();\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\tpayload: {},\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\tpayload: null,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.UPDATE_USERINFO: {\n\t\t\tconst { email, username, friends } = action.payload;\n\t\t\tif (email)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\telse if (username)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tusername,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\telse if (friends)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tfriends,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.SOCIAL_AUTH: {\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\tpayload: AuthStatus.AUTHENTICATION_LOADING,\n\t\t\t});\n\n\t\t\tconst { token } = action.payload;\n\t\t\tconst { errors } = await googleAuth(token);\n\t\t\tif (errors === null) {\n\t\t\t\tconst userInfo = await getUserDetails();\n\t\t\t\tif (userInfo !== null) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\t\t\tpayload: userInfo,\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t\t\tconst socket = connect(SOCKET_URL);\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\t\t\tpayload: socket,\n\t\t\t\t\t});\n\t\t\t\t} else\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t});\n\t\t\t\treturn errors;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn;\n\t}\n};\n\nexport { authReducer, initialState, customAuthDispatch };\n","import React, { createContext, useReducer } from \"react\";\nimport { AuthContextType } from \"../../types/authTypes\";\nimport { authReducer, customAuthDispatch, initialState } from \"./AuthReducer\";\n\nconst AuthContext = createContext<AuthContextType>({} as any);\n\nconst AuthProvider: React.FC = ({ children }) => {\n\tconst [state, dispatch] = useReducer(authReducer, initialState);\n\n\tconst contextValue = {\n\t\tauthInfo: state,\n\t\tdispatch: customAuthDispatch(dispatch),\n\t};\n\n\treturn (\n\t\t<AuthContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport { AuthContext, AuthProvider };\n","import { Dimmer, Loader } from \"semantic-ui-react\";\n\nfunction AppLoader() {\n\treturn (\n\t\t<Dimmer active inverted>\n\t\t\t<Loader size=\"large\">Loading</Loader>\n\t\t</Dimmer>\n\t);\n}\n\nexport { AppLoader };\n","import { Dispatch, useState } from \"react\";\nimport GoogleLogin, {\n\tGoogleLoginResponse,\n\tGoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Divider, Form } from \"semantic-ui-react\";\nimport { LoginErrors } from \"../types/authTypes\";\n\ninterface Props {\n\tloginUser: (\n\t\temail: string,\n\t\tpassword: string,\n\t\tsetError: Dispatch<LoginErrors>\n\t) => void;\n\tonSuccess: (\n\t\tresponse: GoogleLoginResponse | GoogleLoginResponseOffline\n\t) => void;\n}\n\nfunction Login({ loginUser, onSuccess }: Props) {\n\tconst [email, setEmail] = useState<string>(\"\");\n\tconst [password, setPassword] = useState<string>(\"\");\n\tconst [error, setError] = useState<LoginErrors>({});\n\n\treturn (\n\t\t<div className=\"login__page\">\n\t\t\t<Card color=\"blue\" raised className=\"login__card\">\n\t\t\t\t<h3>Login</h3>\n\t\t\t\t<Form onSubmit={() => loginUser(email, password, setError)}>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\t\ticon=\"mail\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\terror={error.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\ticon=\"key\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\terror={error.password}\n\t\t\t\t\t/>\n\t\t\t\t\t<Divider horizontal>or</Divider>\n\t\t\t\t\t<Form.Field className=\"btn__center\">\n\t\t\t\t\t\t<GoogleLogin\n\t\t\t\t\t\t\tclientId={\n\t\t\t\t\t\t\t\tprocess.env.REACT_APP_GOOGLE_CLIENT_ID as string\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbuttonText=\"Login with Google\"\n\t\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\t\tcookiePolicy=\"single_host_origin\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Button type=\"submit\" primary>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t\t<small>\n\t\t\t\tDon't have a account? <Link to=\"/register\">SignUp</Link>\n\t\t\t</small>\n\t\t</div>\n\t);\n}\n\nexport { Login };\n","import { Dispatch, useCallback, useContext } from \"react\";\nimport {\n\tGoogleLoginResponse,\n\tGoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport { Redirect } from \"react-router\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { Login } from \"../components/Login\";\nimport { ActionTypes, AuthStatus, LoginErrors } from \"../types/authTypes\";\n\nfunction LoginContainer() {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\n\tconst loginUser = useCallback(\n\t\tasync (\n\t\t\temail: string,\n\t\t\tpassword: string,\n\t\t\tsetError: Dispatch<LoginErrors>\n\t\t) => {\n\t\t\tsetError({});\n\t\t\tconst errors = await dispatch({\n\t\t\t\ttype: ActionTypes.LOGIN,\n\t\t\t\tpayload: {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (errors !== undefined) {\n\t\t\t\tconst allErrors: LoginErrors = {};\n\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\tswitch (error.param) {\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\tallErrors.email = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"password\":\n\t\t\t\t\t\t\tallErrors.password = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetError(allErrors);\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[]\n\t);\n\n\tconst onSuccess = (\n\t\tresponse: GoogleLoginResponse | GoogleLoginResponseOffline\n\t) => {\n\t\tconst gResponse = response as GoogleLoginResponse;\n\t\t// console.log(response);\n\t\t// googleAuth(gResponse.tokenId);\n\t\tdispatch({\n\t\t\ttype: ActionTypes.SOCIAL_AUTH,\n\t\t\tpayload: {\n\t\t\t\ttoken: gResponse.tokenId,\n\t\t\t},\n\t\t});\n\t};\n\n\tif (authInfo.authStatus === AuthStatus.AUTHENTICATED)\n\t\treturn <Redirect to=\"/\" />;\n\n\treturn <Login loginUser={loginUser} onSuccess={onSuccess} />;\n}\n\nexport { LoginContainer };\n","import { Dispatch, useState } from \"react\";\nimport GoogleLogin, {\n\tGoogleLoginResponse,\n\tGoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Divider, Form } from \"semantic-ui-react\";\nimport { RegisterErrors } from \"../types/authTypes\";\n\ninterface Props {\n\tregisterUser: (\n\t\tusername: string,\n\t\temail: string,\n\t\tpassword: string,\n\t\tsetError: Dispatch<RegisterErrors>\n\t) => void;\n\tonSuccess: (\n\t\tresponse: GoogleLoginResponse | GoogleLoginResponseOffline\n\t) => void;\n}\n\nfunction Register({ registerUser, onSuccess }: Props) {\n\tconst [username, setUsername] = useState<string>(\"\");\n\tconst [email, setEmail] = useState<string>(\"\");\n\tconst [password, setPassword] = useState<string>(\"\");\n\tconst [error, setError] = useState<RegisterErrors>({});\n\n\treturn (\n\t\t<div className=\"login__page\">\n\t\t\t<Card color=\"blue\" raised className=\"login__card\">\n\t\t\t\t<h3>Register</h3>\n\t\t\t\t<Form\n\t\t\t\t\tonSubmit={() =>\n\t\t\t\t\t\tregisterUser(username, email, password, setError)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\tplaceholder=\"username\"\n\t\t\t\t\t\ticon=\"user\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\terror={error.username}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\t\ticon=\"mail\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\terror={error.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\ticon=\"key\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\terror={error.password}\n\t\t\t\t\t/>\n\t\t\t\t\t<Divider horizontal>or</Divider>\n\t\t\t\t\t<Form.Field className=\"btn__center\">\n\t\t\t\t\t\t<GoogleLogin\n\t\t\t\t\t\t\tclientId={\n\t\t\t\t\t\t\t\tprocess.env.REACT_APP_GOOGLE_CLIENT_ID as string\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbuttonText=\"Register with Google\"\n\t\t\t\t\t\t\tonSuccess={onSuccess}\n\t\t\t\t\t\t\tcookiePolicy=\"single_host_origin\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Button type=\"submit\" primary>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t\t<small>\n\t\t\t\tAlready have a account? <Link to=\"/login\">SignUp</Link>\n\t\t\t</small>\n\t\t</div>\n\t);\n}\n\nexport { Register };\n","import { Dispatch, useCallback, useContext } from \"react\";\nimport {\n\tGoogleLoginResponse,\n\tGoogleLoginResponseOffline,\n} from \"react-google-login\";\nimport { Redirect } from \"react-router\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { Register } from \"../components/Register\";\nimport { ActionTypes, AuthStatus, RegisterErrors } from \"../types/authTypes\";\n\nfunction RegisterContainer() {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\n\tconst registerUser = useCallback(\n\t\tasync (\n\t\t\tusername: string,\n\t\t\temail: string,\n\t\t\tpassword: string,\n\t\t\tsetError: Dispatch<RegisterErrors>\n\t\t) => {\n\t\t\tsetError({});\n\t\t\tconst errors = await dispatch({\n\t\t\t\ttype: ActionTypes.REGISTER,\n\t\t\t\tpayload: {\n\t\t\t\t\tusername,\n\t\t\t\t\temail,\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (errors !== undefined) {\n\t\t\t\tconst allErrors: RegisterErrors = {};\n\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\tswitch (error.param) {\n\t\t\t\t\t\tcase \"username\":\n\t\t\t\t\t\t\tallErrors.username = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\tallErrors.email = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"password\":\n\t\t\t\t\t\t\tallErrors.password = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetError(allErrors);\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[]\n\t);\n\n\tconst onSuccess = (\n\t\tresponse: GoogleLoginResponse | GoogleLoginResponseOffline\n\t) => {\n\t\tconst gResponse = response as GoogleLoginResponse;\n\t\t// console.log(response);\n\t\t// googleAuth(gResponse.tokenId);\n\t\tdispatch({\n\t\t\ttype: ActionTypes.SOCIAL_AUTH,\n\t\t\tpayload: {\n\t\t\t\ttoken: gResponse.tokenId,\n\t\t\t},\n\t\t});\n\t};\n\n\tif (authInfo.authStatus === AuthStatus.AUTHENTICATED)\n\t\treturn <Redirect to=\"/\" />;\n\n\treturn <Register registerUser={registerUser} onSuccess={onSuccess} />;\n}\n\nexport { RegisterContainer };\n","import { User } from \"../../types/userTypes\";\n\nconst getUserList = async (): Promise<User[]> => {\n\tconst accessToken = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t},\n\t};\n\tconst response = await fetch(\"/api/user/list\", requestOptions);\n\tconst data: User[] = await response.json();\n\treturn data;\n};\n\nconst getUser = async (query: string): Promise<User[]> => {\n\tconst accessToken = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t},\n\t};\n\tconst response = await fetch(\n\t\t\"/api/user/get-user?\" +\n\t\t\tnew URLSearchParams({\n\t\t\t\tq: query,\n\t\t\t}),\n\t\trequestOptions\n\t);\n\tconst data: { result: User[] } = await response.json();\n\treturn data.result;\n};\n\nconst addFriend = async (id: string): Promise<User> => {\n\tconst accessToken = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t},\n\t\tbody: JSON.stringify({ newFriend: id }),\n\t};\n\tconst response = await fetch(\"/api/user/add-friend\", requestOptions);\n\tconst data: { result: User } = await response.json();\n\treturn data.result;\n};\n\nexport { getUserList, getUser, addFriend };\n","import { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n\tButton,\n\tIcon,\n\tInput,\n\tMessage,\n\tPopup,\n\tSegment,\n} from \"semantic-ui-react\";\nimport { AuthContext } from \"../../actions/auth/AuthContext\";\nimport { MessageType } from \"../../types/userTypes\";\nimport \"../../styles/home.scss\";\n\nconst getTime = (date: Date): string => {\n\tdate = new Date(date);\n\tconst hours = date.getHours() % 12;\n\tconst time = date.getMinutes();\n\treturn `${hours}:${time}`;\n};\n\nfunction ChatBox({\n\tmessages,\n\tsendMessage,\n\tdeSelectUser,\n}: {\n\tmessages: MessageType[];\n\tsendMessage: (message: string) => void;\n\tdeSelectUser: () => void;\n}) {\n\tconst { authInfo } = useContext(AuthContext);\n\tconst [message, setMessage] = useState<string>(\"\");\n\tconst ref = useRef<HTMLDivElement>(null);\n\n\tuseEffect(() => {\n\t\tif (ref && ref.current) ref.current.scrollIntoView();\n\t}, [messages, message, ref]);\n\n\treturn (\n\t\t<Segment className=\"chat__box\">\n\t\t\t<Icon\n\t\t\t\tclassName=\"back__btn\"\n\t\t\t\tname=\"arrow left\"\n\t\t\t\tsize=\"big\"\n\t\t\t\tonClick={deSelectUser}\n\t\t\t/>\n\t\t\t<Popup\n\t\t\t\ttrigger={\n\t\t\t\t\t<Icon className=\"info__btn\" name=\"info circle\" size=\"big\" />\n\t\t\t\t}\n\t\t\t\tcontent={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\twarning\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\theader=\"Not Encrypted\"\n\t\t\t\t\t\t\tcontent=\"messages are not encrypted in this app, don't share any personal info\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\theader=\"Auto Delete\"\n\t\t\t\t\t\t\tcontent=\"Messages will be deleted after 24 hours\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<div className=\"chat__messages__container\">\n\t\t\t\t{messages.map((message) => (\n\t\t\t\t\t<p\n\t\t\t\t\t\tkey={message._id}\n\t\t\t\t\t\tclassName={`chat__message ${\n\t\t\t\t\t\t\tmessage.author === authInfo.userInfo._id\n\t\t\t\t\t\t\t\t? \"our__message\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{message.message}\n\t\t\t\t\t\t\t<small>{getTime(message.timestamp)}</small>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t))}\n\t\t\t\t<div ref={ref} />\n\t\t\t</div>\n\t\t\t<Input\n\t\t\t\tautoFocus\n\t\t\t\tvalue={message}\n\t\t\t\tclassName=\"chat__input\"\n\t\t\t\tonKeyPress={(e: any) => {\n\t\t\t\t\tif (e.charCode === 13) {\n\t\t\t\t\t\tsendMessage(e.target.value);\n\t\t\t\t\t\tsetMessage(\"\");\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(e) => setMessage(e.target.value)}\n\t\t\t\tlabel={\n\t\t\t\t\t<Button\n\t\t\t\t\t\tprimary\n\t\t\t\t\t\ticon\n\t\t\t\t\t\tactive\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsendMessage(message);\n\t\t\t\t\t\t\tsetMessage(\"\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"send\" />\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t\tlabelPosition=\"right\"\n\t\t\t\tplaceholder=\"Type anything . . .\"\n\t\t\t/>\n\t\t</Segment>\n\t);\n}\n\nexport default ChatBox;\n","import { MouseEvent, useContext } from \"react\";\nimport {\n\tDropdown,\n\tImage,\n\tList,\n\tSearch,\n\tSearchProps,\n\tSearchResultData,\n} from \"semantic-ui-react\";\nimport { AuthContext } from \"../../actions/auth/AuthContext\";\nimport { UserInfo } from \"../../types/authTypes\";\nimport { SearchResult } from \"../../types/userTypes\";\n\nconst usersAvatar = [\n\t\"rachel.png\",\n\t\"lindsay.png\",\n\t\"matthew.png\",\n\t\"jenny.jpg\",\n\t\"veronika.jpg\",\n\t\"tom.jpg\",\n\t\"christian.jpg\",\n\t\"matt.jpg\",\n\t\"daniel.jpg\",\n];\nconst getRandomAvatar = () =>\n\tusersAvatar[Math.floor(Math.random() * usersAvatar.length)];\n\nfunction SideBar({\n\tloading,\n\tonResultSelect,\n\tonSearchChange,\n\tresults,\n\tvalue,\n\tactiveUser,\n\tuserOnClick,\n\tlogoutUser,\n}: {\n\tloading: boolean;\n\tonResultSelect: (\n\t\te: MouseEvent<HTMLDivElement>,\n\t\tdata: SearchResultData\n\t) => Promise<void>;\n\tonSearchChange: (\n\t\te: MouseEvent<HTMLElement>,\n\t\tdata: SearchProps\n\t) => Promise<void>;\n\tresults: SearchResult[];\n\tvalue: string;\n\tactiveUser: UserInfo | null;\n\tuserOnClick: (id: string) => void;\n\tlogoutUser: () => Promise<void>;\n}) {\n\tconst { authInfo } = useContext(AuthContext);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"search__menu\">\n\t\t\t\t<Search\n\t\t\t\t\tplaceholder=\"Search User . . .\"\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tonResultSelect={onResultSelect}\n\t\t\t\t\tonSearchChange={onSearchChange}\n\t\t\t\t\tresults={results}\n\t\t\t\t\tvalue={value}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\tsimple\n\t\t\t\t\tclassName=\"menu__dropdown\"\n\t\t\t\t\tdirection=\"left\"\n\t\t\t\t\ticon=\"ellipsis vertical\"\n\t\t\t\t>\n\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t<Dropdown.Item onClick={logoutUser}>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t</Dropdown>\n\t\t\t</div>\n\t\t\t<List animated celled size=\"big\" className=\"friends__list\">\n\t\t\t\t{authInfo.userInfo.friends?.map((friend) => (\n\t\t\t\t\t<List.Item\n\t\t\t\t\t\tkey={friend._id}\n\t\t\t\t\t\tactive={activeUser?._id === friend._id}\n\t\t\t\t\t\tclassName=\"list__item\"\n\t\t\t\t\t\tonClick={() => userOnClick(friend._id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tavatar\n\t\t\t\t\t\t\tsrc={`https://react.semantic-ui.com/images/avatar/small/${getRandomAvatar()}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t<List.Header>{friend.username}</List.Header>\n\t\t\t\t\t\t\t<List.Description>{friend.email}</List.Description>\n\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t</List.Item>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</div>\n\t);\n}\n\nexport default SideBar;\n","import { MouseEvent, useContext } from \"react\";\nimport {\n\tGrid,\n\tGridColumn,\n\tGridRow,\n\tHeader,\n\tIcon,\n\tSearchProps,\n\tSearchResultData,\n} from \"semantic-ui-react\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { UserInfo } from \"../types/authTypes\";\nimport { MessageType, SearchResult } from \"../types/userTypes\";\nimport ChatBox from \"./subComponents/ChatBox\";\nimport SideBar from \"./subComponents/SideBar\";\nimport \"../styles/home.scss\";\nimport { AppLoader } from \"./AppLoader\";\n\nfunction Home({\n\tloading,\n\tonResultSelect,\n\tonSearchChange,\n\tresults,\n\tvalue,\n\tactiveUser,\n\tmessages,\n\tuserOnClick,\n\tlogoutUser,\n\tsendMessage,\n\tdeSelectUser,\n\tmessagesLoading,\n}: {\n\tloading: boolean;\n\tonResultSelect: (\n\t\te: MouseEvent<HTMLDivElement>,\n\t\tdata: SearchResultData\n\t) => Promise<void>;\n\tonSearchChange: (\n\t\te: MouseEvent<HTMLElement>,\n\t\tdata: SearchProps\n\t) => Promise<void>;\n\tresults: SearchResult[];\n\tvalue: string;\n\tactiveUser: UserInfo | null;\n\tmessages: MessageType[];\n\tuserOnClick: (id: string) => void;\n\tlogoutUser: () => Promise<void>;\n\tsendMessage: (message: string) => void;\n\tdeSelectUser: () => void;\n\tmessagesLoading: boolean;\n}) {\n\tconst { authInfo } = useContext(AuthContext);\n\n\treturn (\n\t\t<Grid columns=\"two\" divided className=\"home__container\">\n\t\t\t<GridRow>\n\t\t\t\t<GridColumn\n\t\t\t\t\tcomputer={4}\n\t\t\t\t\tmobile={16}\n\t\t\t\t\tclassName={`full__height ${\n\t\t\t\t\t\tactiveUser ? \"display__none__mobile\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<Header textAlign=\"center\" size=\"huge\">\n\t\t\t\t\t\tG - Chat\n\t\t\t\t\t</Header>\n\t\t\t\t\t<SideBar\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tonResultSelect={onResultSelect}\n\t\t\t\t\t\tonSearchChange={onSearchChange}\n\t\t\t\t\t\tresults={results}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tactiveUser={activeUser}\n\t\t\t\t\t\tuserOnClick={userOnClick}\n\t\t\t\t\t\tlogoutUser={logoutUser}\n\t\t\t\t\t/>\n\t\t\t\t</GridColumn>\n\t\t\t\t<GridColumn\n\t\t\t\t\tcomputer={12}\n\t\t\t\t\tmobile={16}\n\t\t\t\t\tclassName={`full_height ${\n\t\t\t\t\t\tactiveUser ? \"\" : \"display__none__mobile\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t{activeUser ? (\n\t\t\t\t\t\tmessagesLoading ? (\n\t\t\t\t\t\t\t<AppLoader />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ChatBox\n\t\t\t\t\t\t\t\tsendMessage={sendMessage}\n\t\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\t\tdeSelectUser={deSelectUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t) : authInfo.userInfo.friends?.length ? (\n\t\t\t\t\t\t<div className=\"full__height center\">\n\t\t\t\t\t\t\t<Header as=\"h2\" icon>\n\t\t\t\t\t\t\t\t<Icon name=\"user\" />\n\t\t\t\t\t\t\t\tSelect a Friend to Chat\n\t\t\t\t\t\t\t\t<Header.Subheader>\n\t\t\t\t\t\t\t\t\tselect the friend from the sidebar to chat\n\t\t\t\t\t\t\t\t</Header.Subheader>\n\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"full__height center\">\n\t\t\t\t\t\t\t<Header as=\"h2\" icon>\n\t\t\t\t\t\t\t\t<Icon name=\"hand peace\" />\n\t\t\t\t\t\t\t\tHii {authInfo.userInfo.username}\n\t\t\t\t\t\t\t\t<Header.Subheader>\n\t\t\t\t\t\t\t\t\tsearch for admin to chat with me\n\t\t\t\t\t\t\t\t</Header.Subheader>\n\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</GridColumn>\n\t\t\t</GridRow>\n\t\t</Grid>\n\t);\n}\n\nexport { Home };\n","import { MouseEvent, useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { SearchProps, SearchResultData } from \"semantic-ui-react\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { addFriend, getUser } from \"../actions/users/usersActions\";\nimport { Home } from \"../components/Home\";\nimport { ActionTypes, AuthStatus } from \"../types/authTypes\";\nimport { MessageType, SearchResult, User } from \"../types/userTypes\";\n\nfunction HomeContainer() {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\tconst [value, setValue] = useState<string>(\"\");\n\tconst [loading, setLoading] = useState<boolean>(false);\n\tconst [results, setResults] = useState<SearchResult[]>([]);\n\tconst [activeUser, setActiveUser] = useState<User | null>(null);\n\tconst [messages, setMessages] = useState<MessageType[]>([]);\n\tconst [messagesLoading, setMessagesLoading] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tconst socket = authInfo.socket;\n\t\tif (socket !== null) {\n\t\t\tsocket.on(\n\t\t\t\t\"oldMessages\",\n\t\t\t\t({ messages }: { messages: MessageType[] }) => {\n\t\t\t\t\tsetMessages(messages);\n\t\t\t\t\tsetMessagesLoading(false);\n\t\t\t\t}\n\t\t\t);\n\t\t\tsocket.on(\n\t\t\t\t\"newMessage\",\n\t\t\t\t({ newMessage }: { newMessage: MessageType }) => {\n\t\t\t\t\tsetMessages((oldMessages) => [...oldMessages, newMessage]);\n\t\t\t\t}\n\t\t\t);\n\t\t\tsocket.on(\"alert\", (data: any) => alert(data));\n\t\t}\n\t}, [authInfo.socket]);\n\n\tconst searchUser = async (query: string) => {\n\t\tconst { userInfo } = authInfo;\n\n\t\tconst users = await getUser(query);\n\t\treturn users\n\t\t\t.filter((user) => user._id !== userInfo._id)\n\t\t\t.map((user) => ({\n\t\t\t\t_id: user._id,\n\t\t\t\ttitle: user.username,\n\t\t\t\tdescription: user.email,\n\t\t\t}));\n\t};\n\n\tconst onSearchChange = async (\n\t\te: MouseEvent<HTMLElement>,\n\t\tdata: SearchProps\n\t) => {\n\t\tif (data.value) {\n\t\t\tsetValue(data.value);\n\t\t\tsetLoading(true);\n\t\t\tconst users = await searchUser(data.value);\n\t\t\tsetResults(users);\n\t\t\tsetLoading(false);\n\t\t} else setValue(\"\");\n\t};\n\n\tconst userOnClick = async (id: string) => {\n\t\tconst oldFriends = authInfo.userInfo.friends;\n\t\tif (oldFriends) {\n\t\t\tconst friend = oldFriends.find((friend) => friend._id === id);\n\t\t\tif (friend) {\n\t\t\t\tsetMessages([]);\n\t\t\t\tsetMessagesLoading(true);\n\t\t\t\tauthInfo.socket?.emit(\"getMessages\", {\n\t\t\t\t\troomId: friend.roomId,\n\t\t\t\t});\n\t\t\t\tsetActiveUser(friend);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst onResultSelect = async (\n\t\tevent: MouseEvent<HTMLDivElement>,\n\t\tdata: SearchResultData\n\t) => {\n\t\tconst oldFriends = authInfo.userInfo.friends;\n\t\tif (oldFriends) {\n\t\t\tconst friend = oldFriends.find(\n\t\t\t\t(friend) => friend._id === data.result._id\n\t\t\t);\n\t\t\tif (friend === undefined) {\n\t\t\t\tconst friend = await addFriend(data.result._id);\n\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: ActionTypes.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tfriends: [...oldFriends, friend],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tuserOnClick(friend._id);\n\t\t\t} else userOnClick(friend._id);\n\t\t}\n\t\tsetValue(\"\");\n\t};\n\n\tconst logoutUser = async () => {\n\t\tdispatch({\n\t\t\ttype: ActionTypes.LOGOUT,\n\t\t});\n\t};\n\n\tconst sendMessage = (message: string) => {\n\t\tif (message.trim().length !== 0) {\n\t\t\tauthInfo.socket?.emit(\"sendMessage\", {\n\t\t\t\troomId: activeUser?.roomId,\n\t\t\t\tauthor: authInfo.userInfo._id,\n\t\t\t\tmessage,\n\t\t\t\ttime: new Date(),\n\t\t\t});\n\t\t}\n\t};\n\n\tconst deSelectUser = () => {\n\t\tsetActiveUser(null);\n\t\tsetMessages([]);\n\t};\n\n\tif (authInfo.authStatus !== AuthStatus.AUTHENTICATED)\n\t\treturn <Redirect to=\"/login\" />;\n\n\treturn (\n\t\t<Home\n\t\t\tloading={loading}\n\t\t\tonResultSelect={onResultSelect}\n\t\t\tonSearchChange={onSearchChange}\n\t\t\tresults={results}\n\t\t\tvalue={value}\n\t\t\tactiveUser={activeUser}\n\t\t\tmessages={messages}\n\t\t\tuserOnClick={userOnClick}\n\t\t\tlogoutUser={logoutUser}\n\t\t\tsendMessage={sendMessage}\n\t\t\tdeSelectUser={deSelectUser}\n\t\t\tmessagesLoading={messagesLoading}\n\t\t/>\n\t);\n}\n\nexport { HomeContainer };\n","import { useContext, useEffect } from \"react\";\n// importing the semantic ui css before all component\n// so that custom css will override this css\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.scss\";\nimport \"./styles/home.scss\";\nimport \"./styles/auth.scss\";\nimport {\n\tSwitch,\n\tRoute,\n\tBrowserRouter as Router,\n\tRedirect,\n} from \"react-router-dom\";\nimport { AuthContext } from \"./actions/auth/AuthContext\";\nimport { ActionTypes, AuthStatus } from \"./types/authTypes\";\nimport { AppLoader } from \"./components/AppLoader\";\nimport { LoginContainer } from \"./containers/LoginContainer\";\nimport { RegisterContainer } from \"./containers/RegisterContainer\";\nimport { HomeContainer } from \"./containers/HomeContainer\";\n\nconst App = () => {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tconst authenticate = (showLoading = false) => {\n\t\t\tdispatch({\n\t\t\t\ttype: ActionTypes.AUTHENTICATE,\n\t\t\t\tpayload: {\n\t\t\t\t\tloading: showLoading,\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t\tauthenticate(true);\n\t\tconst interval = setInterval(authenticate, 1000 * 60 * 60);\n\t\treturn () => clearInterval(interval);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tif (authInfo.authStatus === AuthStatus.AUTHENTICATION_LOADING)\n\t\treturn <AppLoader />;\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={HomeContainer} />\n\t\t\t\t<Route path=\"/login\" component={LoginContainer} />\n\t\t\t\t<Route path=\"/register\" component={RegisterContainer} />\n\t\t\t\t<Route path=\"/\" component={() => <Redirect to=\"/login\" />} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AuthProvider } from \"./actions/auth/AuthContext\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<AuthProvider>\n\t\t\t<App />\n\t\t</AuthProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}