{"version":3,"sources":["types/authTypes.ts","actions/auth/authActions.ts","actions/auth/AuthReducer.ts","actions/auth/AuthContext.tsx","components/AppLoader.tsx","components/Login.tsx","containers/LoginContainer.tsx","components/Register.tsx","containers/RegisterContainer.tsx","actions/users/usersActions.ts","components/subComponents/ChatBox.tsx","components/subComponents/SideBar.tsx","components/Home.tsx","containers/HomeContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AuthStatus","ActionTypes","AuthActionType","saveLocalStorage","key","value","localStorage","setItem","login","email","password","a","requestOptions","method","headers","Accept","body","JSON","stringify","fetch","response","json","data","accessToken","refreshToken","register","username","token","getItem","error","undefined","getUserDetails","parse","atob","split","Authorization","friendsData","_id","friends","result","logout","removeItem","initialState","authStatus","NOT_AUTHENTICATED","userInfo","socket","authReducer","state","action","type","SET_USERINFO","payload","SET_AUTHSTATUS","UPDATE_USERINFO","SET_SOCKET","customAuthDispatch","dispatch","REGISTER","LOGIN","AUTHENTICATE","errors","AUTHENTICATED","connect","process","loading","AUTHENTICATION_LOADING","authenticated","AuthContext","createContext","AuthProvider","children","useReducer","Provider","authInfo","AppLoader","Dimmer","active","inverted","Loader","size","Login","loginUser","useState","setEmail","setPassword","setError","className","Card","color","raised","Form","onSubmit","Input","label","placeholder","icon","iconPosition","onChange","e","target","Button","primary","to","LoginContainer","useContext","useCallback","allErrors","forEach","param","msg","Register","registerUser","setUsername","RegisterContainer","getUser","query","URLSearchParams","q","addFriend","id","newFriend","ChatBox","messages","sendMessage","deSelectUser","message","setMessage","ref","useRef","useEffect","current","scrollIntoView","Segment","Icon","name","onClick","Popup","trigger","content","Message","warning","header","map","author","autoFocus","onKeyPress","charCode","labelPosition","usersAvatar","SideBar","onResultSelect","onSearchChange","results","activeUser","userOnClick","logoutUser","Search","Dropdown","simple","direction","Menu","Item","List","animated","celled","friend","Image","avatar","src","Math","floor","random","length","Content","Header","Description","Home","Grid","columns","divided","GridRow","GridColumn","computer","mobile","textAlign","as","Subheader","HomeContainer","setValue","setLoading","setResults","setActiveUser","setMessages","on","newMessage","oldMessages","alert","searchUser","users","filter","user","title","description","oldFriends","find","emit","roomId","event","trim","App","authenticate","showLoading","interval","setInterval","clearInterval","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1488e3d1.chunk.js","sourcesContent":["import { User } from \"./userTypes\";\n\ninterface AuthError {\n\tvalue?: string;\n\tmsg: string;\n\tparam: string;\n\tlocation?: string;\n}\n\ninterface AuthResponse {\n\terrors: [AuthError] | null;\n\taccessToken?: string;\n\trefreshToken?: string;\n}\n\ninterface RegisterErrors {\n\tusername?: string;\n\temail?: string;\n\tpassword?: string;\n}\n\ninterface LoginErrors {\n\temail?: string;\n\tpassword?: string;\n}\n\ninterface UserInfo {\n\t_id?: string;\n\tusername?: string;\n\temail?: string;\n\tfriends?: User[];\n}\n\n// Reducer and context related\nenum AuthStatus {\n\tNOT_AUTHENTICATED = 0,\n\tAUTHENTICATED = 1,\n\tAUTHENTICATION_LOADING = 2,\n}\n\ninterface AuthInfo {\n\tauthStatus: AuthStatus;\n\tuserInfo: UserInfo;\n\tsocket: SocketIOClient.Socket | null;\n}\n\ninterface AuthContextType {\n\tauthInfo: AuthInfo;\n\tdispatch: (action: Actions) => Promise<AuthError[] | undefined>;\n}\n\n// actions related\n\nenum ActionTypes {\n\tREGISTER = 0,\n\tLOGIN = 1,\n\tAUTHENTICATE = 2,\n\tUPDATE_USERINFO = 3,\n}\n\ninterface Register {\n\ttype: ActionTypes.REGISTER;\n\tpayload: {\n\t\tusername: string;\n\t\temail: string;\n\t\tpassword: string;\n\t};\n}\n\ninterface Login {\n\ttype: ActionTypes.LOGIN;\n\tpayload: {\n\t\temail: string;\n\t\tpassword: string;\n\t};\n}\n\ninterface Authenticate {\n\ttype: ActionTypes.AUTHENTICATE;\n\tpayload: {\n\t\tloading: boolean;\n\t};\n}\n\ninterface UpdateUserInfo {\n\ttype: ActionTypes.UPDATE_USERINFO;\n\tpayload: Partial<UserInfo>;\n}\n\ntype Actions = Register | Login | Authenticate | UpdateUserInfo;\n\n// reducer related\nenum AuthActionType {\n\tSET_USERINFO = 0,\n\tSET_AUTHSTATUS = 1,\n\tUPDATE_USERINFO = 2,\n\tSET_SOCKET = 4,\n}\n\ninterface SetUserInfo {\n\ttype: AuthActionType.SET_USERINFO;\n\tpayload: UserInfo;\n}\n\ninterface SetAuthStatus {\n\ttype: AuthActionType.SET_AUTHSTATUS;\n\tpayload: AuthStatus;\n}\n\ninterface Update {\n\ttype: AuthActionType.UPDATE_USERINFO;\n\tpayload: Partial<UserInfo>;\n}\n\ninterface SetSocket {\n\ttype: AuthActionType.SET_SOCKET;\n\tpayload: SocketIOClient.Socket;\n}\n\ntype AuthAction = SetUserInfo | SetAuthStatus | Update | SetSocket;\n\nexport type {\n\tAuthResponse,\n\tRegisterErrors,\n\tLoginErrors,\n\tAuthContextType,\n\tUserInfo,\n\tAuthInfo,\n\tAuthAction,\n\tActions,\n\tAuthError,\n};\n\nexport { AuthStatus, AuthActionType, ActionTypes };\n","import { AuthResponse, UserInfo } from \"../../types/authTypes\";\nimport { User } from \"../../types/userTypes\";\n\nconst saveLocalStorage = (key?: string, value?: string) => {\n\tkey && value && localStorage.setItem(key, value);\n};\n\nconst login = async (\n\temail: string,\n\tpassword: string\n): Promise<AuthResponse> => {\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ email, password }),\n\t};\n\n\tconst response = await fetch(\"/api/auth/login\", requestOptions);\n\tconst data: AuthResponse = await response.json();\n\tsaveLocalStorage(\"access-token\", data.accessToken);\n\tsaveLocalStorage(\"refresh-token\", data.refreshToken);\n\n\treturn data;\n};\n\nconst register = async (\n\tusername: string,\n\temail: string,\n\tpassword: string\n): Promise<AuthResponse> => {\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ username, email, password }),\n\t};\n\n\tconst response = await fetch(\"/api/auth/register\", requestOptions);\n\tconst data: AuthResponse = await response.json();\n\tsaveLocalStorage(\"access-token\", data.accessToken);\n\tsaveLocalStorage(\"refresh-token\", data.refreshToken);\n\n\treturn data;\n};\n\nconst refreshToken = async (): Promise<boolean> => {\n\tconst token = localStorage.getItem(\"refresh-token\");\n\tif (token === null) return false;\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ refreshToken: token }),\n\t};\n\tconst response = await fetch(\"/api/auth/refresh\", requestOptions);\n\tconst {\n\t\terror,\n\t\taccessToken,\n\t}: {\n\t\terror?: string;\n\t\taccessToken?: string;\n\t} = await response.json();\n\tsaveLocalStorage(\"access-token\", accessToken);\n\treturn error === undefined;\n};\n\nconst getUserDetails = async (): Promise<UserInfo | null> => {\n\ttry {\n\t\tconst token = localStorage.getItem(\"access-token\");\n\t\tif (token) {\n\t\t\tconst data = JSON.parse(atob(token.split(\".\")[1])) as UserInfo;\n\t\t\tconst requestOptions: RequestInit = {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\tAuthorization: `Bearer ${token}`,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst response = await fetch(\"/api/user/friends\", requestOptions);\n\t\t\tconst friendsData: { result: User[] } = await response.json();\n\n\t\t\treturn {\n\t\t\t\t_id: data._id,\n\t\t\t\temail: data.email,\n\t\t\t\tusername: data.username,\n\t\t\t\tfriends: friendsData.result,\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t} catch {\n\t\treturn null;\n\t}\n};\n\nconst logout = async (): Promise<void> => {\n\tconst token = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t};\n\tawait fetch(\"/api/auth/logout\", requestOptions);\n\tlocalStorage.removeItem(\"access-token\");\n\tlocalStorage.removeItem(\"refresh-token\");\n};\n\nexport { login, register, getUserDetails, refreshToken, logout };\n","import { Dispatch } from \"react\";\nimport {\n\tAuthInfo,\n\tAuthAction,\n\tAuthStatus,\n\tAuthActionType,\n\tActions,\n\tActionTypes,\n\tAuthError,\n} from \"../../types/authTypes\";\nimport { getUserDetails, login, refreshToken, register } from \"./authActions\";\nimport { connect } from \"socket.io-client\";\n\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL as string;\n\nconst initialState: AuthInfo = {\n\tauthStatus: AuthStatus.NOT_AUTHENTICATED,\n\tuserInfo: {},\n\tsocket: null,\n};\n\nconst authReducer = (state: AuthInfo, action: AuthAction) => {\n\tswitch (action.type) {\n\t\tcase AuthActionType.SET_USERINFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserInfo: action.payload,\n\t\t\t};\n\n\t\tcase AuthActionType.SET_AUTHSTATUS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthStatus: action.payload,\n\t\t\t};\n\n\t\tcase AuthActionType.UPDATE_USERINFO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserInfo: {\n\t\t\t\t\t...state.userInfo,\n\t\t\t\t\t...action.payload,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase AuthActionType.SET_SOCKET:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsocket: action.payload,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst customAuthDispatch = (dispatch: Dispatch<AuthAction>) => async (\n\taction: Actions\n): Promise<[AuthError] | undefined> => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.REGISTER: {\n\t\t\tconst { email, password, username } = action.payload;\n\t\t\tconst { errors } = await register(username, email, password);\n\t\t\tif (errors === null) {\n\t\t\t\tconst userInfo = await getUserDetails();\n\t\t\t\tif (userInfo !== null) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\t\t\tpayload: userInfo,\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t\t\tconst socket = connect(SOCKET_URL);\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\t\t\tpayload: socket,\n\t\t\t\t\t});\n\t\t\t\t} else\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t});\n\t\t\t\treturn errors;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.LOGIN: {\n\t\t\tconst { email, password } = action.payload;\n\t\t\tconst { errors } = await login(email, password);\n\t\t\tif (errors === null) {\n\t\t\t\tconst userInfo = await getUserDetails();\n\t\t\t\tif (userInfo !== null) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\t\t\tpayload: userInfo,\n\t\t\t\t\t});\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t\t\tconst socket = connect(SOCKET_URL);\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\t\t\tpayload: socket,\n\t\t\t\t\t});\n\t\t\t\t} else\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t});\n\t\t\t\treturn errors;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.AUTHENTICATE: {\n\t\t\tconst { loading } = action.payload;\n\t\t\tloading &&\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: AuthStatus.AUTHENTICATION_LOADING,\n\t\t\t\t});\n\n\t\t\tconst authenticated = await refreshToken();\n\t\t\tif (authenticated) {\n\t\t\t\tconst userInfo = await getUserDetails();\n\t\t\t\tif (userInfo !== null) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: AuthActionType.SET_USERINFO,\n\t\t\t\t\t\tpayload: userInfo,\n\t\t\t\t\t});\n\t\t\t\t\tif (loading) {\n\t\t\t\t\t\tconst socket = connect(SOCKET_URL);\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: AuthActionType.SET_SOCKET,\n\t\t\t\t\t\t\tpayload: socket,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdispatch({\n\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\tpayload: authenticated\n\t\t\t\t\t? AuthStatus.AUTHENTICATED\n\t\t\t\t\t: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t});\n\n\t\t\tloading &&\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.SET_AUTHSTATUS,\n\t\t\t\t\tpayload: authenticated\n\t\t\t\t\t\t? AuthStatus.AUTHENTICATED\n\t\t\t\t\t\t: AuthStatus.NOT_AUTHENTICATED,\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tcase ActionTypes.UPDATE_USERINFO: {\n\t\t\tconst { email, username, friends } = action.payload;\n\t\t\tif (email)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\telse if (username)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tusername,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\telse if (friends)\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: AuthActionType.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tfriends,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn;\n\t}\n};\n\nexport { authReducer, initialState, customAuthDispatch };\n","import React, { createContext, useReducer } from \"react\";\nimport { AuthContextType } from \"../../types/authTypes\";\nimport { authReducer, customAuthDispatch, initialState } from \"./AuthReducer\";\n\nconst AuthContext = createContext<AuthContextType>({} as any);\n\nconst AuthProvider: React.FC = ({ children }) => {\n\tconst [state, dispatch] = useReducer(authReducer, initialState);\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{\n\t\t\t\tauthInfo: state,\n\t\t\t\tdispatch: customAuthDispatch(dispatch),\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport { AuthContext, AuthProvider };\n","import { Dimmer, Loader } from \"semantic-ui-react\";\n\nfunction AppLoader() {\n\treturn (\n\t\t<Dimmer active inverted>\n\t\t\t<Loader size=\"large\">Loading</Loader>\n\t\t</Dimmer>\n\t);\n}\n\nexport { AppLoader };\n","import { Dispatch, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Form } from \"semantic-ui-react\";\nimport { LoginErrors } from \"../types/authTypes\";\n\ninterface Props {\n\tloginUser: (\n\t\temail: string,\n\t\tpassword: string,\n\t\tsetError: Dispatch<LoginErrors>\n\t) => void;\n}\n\nfunction Login({ loginUser }: Props) {\n\tconst [email, setEmail] = useState<string>(\"\");\n\tconst [password, setPassword] = useState<string>(\"\");\n\tconst [error, setError] = useState<LoginErrors>({});\n\n\treturn (\n\t\t<div className=\"login__page\">\n\t\t\t<Card color=\"blue\" raised className=\"login__card\">\n\t\t\t\t<h3>Login</h3>\n\t\t\t\t<Form onSubmit={() => loginUser(email, password, setError)}>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\t\ticon=\"mail\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\terror={error.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\ticon=\"key\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\terror={error.password}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button type=\"submit\" primary>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t\t<small>\n\t\t\t\tDon't have a account? <Link to=\"/register\">SignUp</Link>\n\t\t\t</small>\n\t\t</div>\n\t);\n}\n\nexport { Login };\n","import { Dispatch, useCallback, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { Login } from \"../components/Login\";\nimport { ActionTypes, AuthStatus, LoginErrors } from \"../types/authTypes\";\n\nfunction LoginContainer() {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\n\tconst loginUser = useCallback(\n\t\tasync (\n\t\t\temail: string,\n\t\t\tpassword: string,\n\t\t\tsetError: Dispatch<LoginErrors>\n\t\t) => {\n\t\t\tsetError({});\n\t\t\tconst errors = await dispatch({\n\t\t\t\ttype: ActionTypes.LOGIN,\n\t\t\t\tpayload: {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (errors !== undefined) {\n\t\t\t\tconst allErrors: LoginErrors = {};\n\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\tswitch (error.param) {\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\tallErrors.email = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"password\":\n\t\t\t\t\t\t\tallErrors.password = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetError(allErrors);\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tif (authInfo.authStatus === AuthStatus.AUTHENTICATED)\n\t\treturn <Redirect to=\"/\" />;\n\n\treturn <Login loginUser={loginUser} />;\n}\n\nexport { LoginContainer };\n","import { Dispatch, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Form } from \"semantic-ui-react\";\nimport { RegisterErrors } from \"../types/authTypes\";\n\ninterface Props {\n\tregisterUser: (\n\t\tusername: string,\n\t\temail: string,\n\t\tpassword: string,\n\t\tsetError: Dispatch<RegisterErrors>\n\t) => void;\n}\n\nfunction Register({ registerUser }: Props) {\n\tconst [username, setUsername] = useState<string>(\"\");\n\tconst [email, setEmail] = useState<string>(\"\");\n\tconst [password, setPassword] = useState<string>(\"\");\n\tconst [error, setError] = useState<RegisterErrors>({});\n\n\treturn (\n\t\t<div className=\"login__page\">\n\t\t\t<Card color=\"blue\" raised className=\"login__card\">\n\t\t\t\t<h3>Register</h3>\n\t\t\t\t<Form\n\t\t\t\t\tonSubmit={() =>\n\t\t\t\t\t\tregisterUser(username, email, password, setError)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\tplaceholder=\"username\"\n\t\t\t\t\t\ticon=\"user\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\terror={error.username}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\t\ticon=\"mail\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\terror={error.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\ticon=\"key\"\n\t\t\t\t\t\ticonPosition=\"left\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\terror={error.password}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button type=\"submit\" primary>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t\t<small>\n\t\t\t\tAlready have a account? <Link to=\"/login\">SignUp</Link>\n\t\t\t</small>\n\t\t</div>\n\t);\n}\n\nexport { Register };\n","import { Dispatch, useCallback, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { Register } from \"../components/Register\";\nimport { ActionTypes, AuthStatus, RegisterErrors } from \"../types/authTypes\";\n\nfunction RegisterContainer() {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\n\tconst registerUser = useCallback(\n\t\tasync (\n\t\t\tusername: string,\n\t\t\temail: string,\n\t\t\tpassword: string,\n\t\t\tsetError: Dispatch<RegisterErrors>\n\t\t) => {\n\t\t\tsetError({});\n\t\t\tconst errors = await dispatch({\n\t\t\t\ttype: ActionTypes.REGISTER,\n\t\t\t\tpayload: {\n\t\t\t\t\tusername,\n\t\t\t\t\temail,\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (errors !== undefined) {\n\t\t\t\tconst allErrors: RegisterErrors = {};\n\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\tswitch (error.param) {\n\t\t\t\t\t\tcase \"username\":\n\t\t\t\t\t\t\tallErrors.username = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\tallErrors.email = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"password\":\n\t\t\t\t\t\t\tallErrors.password = error.msg;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetError(allErrors);\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\tif (authInfo.authStatus === AuthStatus.AUTHENTICATED)\n\t\treturn <Redirect to=\"/\" />;\n\n\treturn <Register registerUser={registerUser} />;\n}\n\nexport { RegisterContainer };\n","import { User } from \"../../types/userTypes\";\n\nconst getUserList = async (): Promise<User[]> => {\n\tconst accessToken = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t},\n\t};\n\tconst response = await fetch(\"/api/user/list\", requestOptions);\n\tconst data: User[] = await response.json();\n\treturn data;\n};\n\nconst getUser = async (query: string): Promise<User[]> => {\n\tconst accessToken = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t},\n\t};\n\tconst response = await fetch(\n\t\t\"/api/user/get-user?\" +\n\t\t\tnew URLSearchParams({\n\t\t\t\tq: query,\n\t\t\t}),\n\t\trequestOptions\n\t);\n\tconst data: { result: User[] } = await response.json();\n\treturn data.result;\n};\n\nconst addFriend = async (id: string): Promise<User> => {\n\tconst accessToken = localStorage.getItem(\"access-token\");\n\n\tconst requestOptions: RequestInit = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t},\n\t\tbody: JSON.stringify({ newFriend: id }),\n\t};\n\tconst response = await fetch(\"/api/user/add-friend\", requestOptions);\n\tconst data: { result: User } = await response.json();\n\treturn data.result;\n};\n\nexport { getUserList, getUser, addFriend };\n","import { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n\tButton,\n\tIcon,\n\tInput,\n\tMessage,\n\tPopup,\n\tSegment,\n} from \"semantic-ui-react\";\nimport { AuthContext } from \"../../actions/auth/AuthContext\";\nimport { MessageType } from \"../../types/userTypes\";\nimport \"../../styles/home.scss\";\n\nfunction ChatBox({\n\tmessages,\n\tsendMessage,\n\tdeSelectUser,\n}: {\n\tmessages: MessageType[];\n\tsendMessage: (message: string) => void;\n\tdeSelectUser: () => void;\n}) {\n\tconst { authInfo } = useContext(AuthContext);\n\tconst [message, setMessage] = useState<string>(\"\");\n\tconst ref = useRef<HTMLDivElement>(null);\n\n\tuseEffect(() => {\n\t\tif (ref && ref.current) ref.current.scrollIntoView();\n\t}, [messages, ref]);\n\n\treturn (\n\t\t<Segment className=\"chat__box\">\n\t\t\t<Icon\n\t\t\t\tclassName=\"back__btn\"\n\t\t\t\tname=\"arrow left\"\n\t\t\t\tsize=\"big\"\n\t\t\t\tonClick={deSelectUser}\n\t\t\t/>\n\t\t\t<Popup\n\t\t\t\ttrigger={\n\t\t\t\t\t<Icon className=\"info__btn\" name=\"info circle\" size=\"big\" />\n\t\t\t\t}\n\t\t\t\tcontent={\n\t\t\t\t\t<Message\n\t\t\t\t\t\twarning\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\theader=\"Not Encrypted\"\n\t\t\t\t\t\tcontent=\"messages are not encrypted in this app, don't share any personal info\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<div className=\"chat__messages__container\">\n\t\t\t\t{messages.map((message) => (\n\t\t\t\t\t<p\n\t\t\t\t\t\tkey={message._id}\n\t\t\t\t\t\tclassName={`chat__message ${\n\t\t\t\t\t\t\tmessage.author === authInfo.userInfo._id\n\t\t\t\t\t\t\t\t? \"our__message\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>{message.message}</span>\n\t\t\t\t\t</p>\n\t\t\t\t))}\n\t\t\t\t<div ref={ref} />\n\t\t\t</div>\n\t\t\t<Input\n\t\t\t\tautoFocus\n\t\t\t\tvalue={message}\n\t\t\t\tclassName=\"chat__input\"\n\t\t\t\tonKeyPress={(e: any) => {\n\t\t\t\t\tif (e.charCode === 13) {\n\t\t\t\t\t\tsendMessage(e.target.value);\n\t\t\t\t\t\tsetMessage(\"\");\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonChange={(e) => setMessage(e.target.value)}\n\t\t\t\tlabel={\n\t\t\t\t\t<Button\n\t\t\t\t\t\tprimary\n\t\t\t\t\t\ticon\n\t\t\t\t\t\tactive\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsendMessage(message);\n\t\t\t\t\t\t\tsetMessage(\"\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"send\" />\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t\tlabelPosition=\"right\"\n\t\t\t\tplaceholder=\"Type anything . . .\"\n\t\t\t/>\n\t\t</Segment>\n\t);\n}\n\nexport default ChatBox;\n","import { MouseEvent, useContext } from \"react\";\nimport {\n\tDropdown,\n\tImage,\n\tList,\n\tSearch,\n\tSearchProps,\n\tSearchResultData,\n} from \"semantic-ui-react\";\nimport { AuthContext } from \"../../actions/auth/AuthContext\";\nimport { UserInfo } from \"../../types/authTypes\";\nimport { SearchResult } from \"../../types/userTypes\";\n\nconst usersAvatar = [\n\t\"rachel.png\",\n\t\"lindsay.png\",\n\t\"matthew.png\",\n\t\"jenny.jpg\",\n\t\"veronika.jpg\",\n\t\"tom.jpg\",\n\t\"christian.jpg\",\n\t\"matt.jpg\",\n\t\"daniel.jpg\",\n];\nconst getRandomAvatar = () =>\n\tusersAvatar[Math.floor(Math.random() * usersAvatar.length)];\n\nfunction SideBar({\n\tloading,\n\tonResultSelect,\n\tonSearchChange,\n\tresults,\n\tvalue,\n\tactiveUser,\n\tuserOnClick,\n\tlogoutUser,\n}: {\n\tloading: boolean;\n\tonResultSelect: (\n\t\te: MouseEvent<HTMLDivElement>,\n\t\tdata: SearchResultData\n\t) => Promise<void>;\n\tonSearchChange: (\n\t\te: MouseEvent<HTMLElement>,\n\t\tdata: SearchProps\n\t) => Promise<void>;\n\tresults: SearchResult[];\n\tvalue: string;\n\tactiveUser: UserInfo | null;\n\tuserOnClick: (id: string) => void;\n\tlogoutUser: () => Promise<void>;\n}) {\n\tconst { authInfo } = useContext(AuthContext);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"search__menu\">\n\t\t\t\t<Search\n\t\t\t\t\tplaceholder=\"Search User . . .\"\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tonResultSelect={onResultSelect}\n\t\t\t\t\tonSearchChange={onSearchChange}\n\t\t\t\t\tresults={results}\n\t\t\t\t\tvalue={value}\n\t\t\t\t/>\n\t\t\t\t<Dropdown\n\t\t\t\t\tsimple\n\t\t\t\t\tclassName=\"menu__dropdown\"\n\t\t\t\t\tdirection=\"left\"\n\t\t\t\t\ticon=\"ellipsis vertical\"\n\t\t\t\t>\n\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t<Dropdown.Item onClick={logoutUser}>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t</Dropdown>\n\t\t\t</div>\n\t\t\t<List animated celled size=\"big\" className=\"friends__list\">\n\t\t\t\t{authInfo.userInfo.friends?.map((friend) => (\n\t\t\t\t\t<List.Item\n\t\t\t\t\t\tkey={friend._id}\n\t\t\t\t\t\tactive={activeUser?._id === friend._id}\n\t\t\t\t\t\tclassName=\"list__item\"\n\t\t\t\t\t\tonClick={() => userOnClick(friend._id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tavatar\n\t\t\t\t\t\t\tsrc={`https://react.semantic-ui.com/images/avatar/small/${getRandomAvatar()}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t<List.Header>{friend.username}</List.Header>\n\t\t\t\t\t\t\t<List.Description>{friend.email}</List.Description>\n\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t</List.Item>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</div>\n\t);\n}\n\nexport default SideBar;\n","import { MouseEvent, useContext } from \"react\";\nimport {\n\tGrid,\n\tGridColumn,\n\tGridRow,\n\tHeader,\n\tIcon,\n\tSearchProps,\n\tSearchResultData,\n} from \"semantic-ui-react\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { UserInfo } from \"../types/authTypes\";\nimport { MessageType, SearchResult } from \"../types/userTypes\";\nimport ChatBox from \"./subComponents/ChatBox\";\nimport SideBar from \"./subComponents/SideBar\";\nimport \"../styles/home.scss\";\n\nfunction Home({\n\tloading,\n\tonResultSelect,\n\tonSearchChange,\n\tresults,\n\tvalue,\n\tactiveUser,\n\tmessages,\n\tuserOnClick,\n\tlogoutUser,\n\tsendMessage,\n\tdeSelectUser,\n}: {\n\tloading: boolean;\n\tonResultSelect: (\n\t\te: MouseEvent<HTMLDivElement>,\n\t\tdata: SearchResultData\n\t) => Promise<void>;\n\tonSearchChange: (\n\t\te: MouseEvent<HTMLElement>,\n\t\tdata: SearchProps\n\t) => Promise<void>;\n\tresults: SearchResult[];\n\tvalue: string;\n\tactiveUser: UserInfo | null;\n\tmessages: MessageType[];\n\tuserOnClick: (id: string) => void;\n\tlogoutUser: () => Promise<void>;\n\tsendMessage: (message: string) => void;\n\tdeSelectUser: () => void;\n}) {\n\tconst { authInfo } = useContext(AuthContext);\n\n\treturn (\n\t\t<Grid columns=\"two\" divided className=\"home__container\">\n\t\t\t<GridRow>\n\t\t\t\t<GridColumn\n\t\t\t\t\tcomputer={4}\n\t\t\t\t\tmobile={16}\n\t\t\t\t\tclassName={`full__height ${\n\t\t\t\t\t\tactiveUser ? \"display__none__mobile\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<Header textAlign=\"center\" size=\"huge\">\n\t\t\t\t\t\tG - Chat\n\t\t\t\t\t</Header>\n\t\t\t\t\t<SideBar\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tonResultSelect={onResultSelect}\n\t\t\t\t\t\tonSearchChange={onSearchChange}\n\t\t\t\t\t\tresults={results}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tactiveUser={activeUser}\n\t\t\t\t\t\tuserOnClick={userOnClick}\n\t\t\t\t\t\tlogoutUser={logoutUser}\n\t\t\t\t\t/>\n\t\t\t\t</GridColumn>\n\t\t\t\t<GridColumn\n\t\t\t\t\tcomputer={12}\n\t\t\t\t\tmobile={16}\n\t\t\t\t\tclassName={`full_height ${\n\t\t\t\t\t\tactiveUser ? \"\" : \"display__none__mobile\"\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t{activeUser ? (\n\t\t\t\t\t\t<ChatBox\n\t\t\t\t\t\t\tsendMessage={sendMessage}\n\t\t\t\t\t\t\tmessages={messages}\n\t\t\t\t\t\t\tdeSelectUser={deSelectUser}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : authInfo.userInfo.friends?.length ? (\n\t\t\t\t\t\t<div className=\"full__height center\">\n\t\t\t\t\t\t\t<Header as=\"h2\" icon>\n\t\t\t\t\t\t\t\t<Icon name=\"user\" />\n\t\t\t\t\t\t\t\tSelect a Friend to Chat\n\t\t\t\t\t\t\t\t<Header.Subheader>\n\t\t\t\t\t\t\t\t\tselect the friend from the sidebar to chat\n\t\t\t\t\t\t\t\t</Header.Subheader>\n\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"full__height center\">\n\t\t\t\t\t\t\t<Header as=\"h2\" icon>\n\t\t\t\t\t\t\t\t<Icon name=\"hand peace\" />\n\t\t\t\t\t\t\t\tHii {authInfo.userInfo.username}\n\t\t\t\t\t\t\t\t<Header.Subheader>\n\t\t\t\t\t\t\t\t\tsearch for your friend name and click to add\n\t\t\t\t\t\t\t\t</Header.Subheader>\n\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</GridColumn>\n\t\t\t</GridRow>\n\t\t</Grid>\n\t);\n}\n\nexport { Home };\n","import { MouseEvent, useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { SearchProps, SearchResultData } from \"semantic-ui-react\";\nimport { AuthContext } from \"../actions/auth/AuthContext\";\nimport { addFriend, getUser } from \"../actions/users/usersActions\";\nimport { logout } from \"../actions/auth/authActions\";\nimport { Home } from \"../components/Home\";\nimport { ActionTypes, AuthStatus } from \"../types/authTypes\";\nimport { MessageType, SearchResult, User } from \"../types/userTypes\";\n\nfunction HomeContainer() {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\tconst [value, setValue] = useState<string>(\"\");\n\tconst [loading, setLoading] = useState<boolean>(false);\n\tconst [results, setResults] = useState<SearchResult[]>([]);\n\tconst [activeUser, setActiveUser] = useState<User | null>(null);\n\tconst [messages, setMessages] = useState<MessageType[]>([]);\n\n\tuseEffect(() => {\n\t\tconst socket = authInfo.socket;\n\t\tif (socket !== null) {\n\t\t\tsocket.on(\n\t\t\t\t\"oldMessages\",\n\t\t\t\t({ messages }: { messages: MessageType[] }) => {\n\t\t\t\t\tsetMessages(messages);\n\t\t\t\t}\n\t\t\t);\n\t\t\tsocket.on(\n\t\t\t\t\"newMessage\",\n\t\t\t\t({ newMessage }: { newMessage: MessageType }) => {\n\t\t\t\t\tsetMessages((oldMessages) => [...oldMessages, newMessage]);\n\t\t\t\t}\n\t\t\t);\n\t\t\tsocket.on(\"alert\", (data: any) => alert(data));\n\t\t}\n\t}, [authInfo.socket]);\n\n\tconst searchUser = async (query: string) => {\n\t\tconst { userInfo } = authInfo;\n\n\t\tconst users = await getUser(query);\n\t\treturn users\n\t\t\t.filter((user) => user._id !== userInfo._id)\n\t\t\t.map((user) => ({\n\t\t\t\t_id: user._id,\n\t\t\t\ttitle: user.username,\n\t\t\t\tdescription: user.email,\n\t\t\t}));\n\t};\n\n\tconst onSearchChange = async (\n\t\te: MouseEvent<HTMLElement>,\n\t\tdata: SearchProps\n\t) => {\n\t\tif (data.value) {\n\t\t\tsetValue(data.value);\n\t\t\tsetLoading(true);\n\t\t\tconst users = await searchUser(data.value);\n\t\t\tsetResults(users);\n\t\t\tsetLoading(false);\n\t\t} else setValue(\"\");\n\t};\n\n\tconst userOnClick = async (id: string) => {\n\t\t// TODO: fetch last messages of the selected user\n\t\tconst oldFriends = authInfo.userInfo.friends;\n\t\tif (oldFriends) {\n\t\t\tconst friend = oldFriends.find((friend) => friend._id === id);\n\t\t\tif (friend) {\n\t\t\t\tauthInfo.socket?.emit(\"getMessages\", {\n\t\t\t\t\troomId: friend.roomId,\n\t\t\t\t});\n\t\t\t\tsetActiveUser(friend);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst onResultSelect = async (\n\t\tevent: MouseEvent<HTMLDivElement>,\n\t\tdata: SearchResultData\n\t) => {\n\t\tconst oldFriends = authInfo.userInfo.friends;\n\t\tif (oldFriends) {\n\t\t\tconst friend = oldFriends.find(\n\t\t\t\t(friend) => friend._id === data.result._id\n\t\t\t);\n\t\t\tif (friend === undefined) {\n\t\t\t\tconst friend = await addFriend(data.result._id);\n\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: ActionTypes.UPDATE_USERINFO,\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tfriends: [...oldFriends, friend],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tuserOnClick(friend._id);\n\t\t\t} else userOnClick(friend._id);\n\t\t}\n\t\tsetValue(\"\");\n\t};\n\n\tconst logoutUser = async () => {\n\t\tawait logout();\n\t\tdispatch({\n\t\t\ttype: ActionTypes.AUTHENTICATE,\n\t\t\tpayload: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst sendMessage = (message: string) => {\n\t\tif (message.trim().length !== 0) {\n\t\t\tauthInfo.socket?.emit(\"sendMessage\", {\n\t\t\t\troomId: activeUser?.roomId,\n\t\t\t\tauthor: authInfo.userInfo._id,\n\t\t\t\tmessage,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst deSelectUser = () => {\n\t\tsetActiveUser(null);\n\t};\n\n\tif (authInfo.authStatus !== AuthStatus.AUTHENTICATED)\n\t\treturn <Redirect to=\"/login\" />;\n\n\treturn (\n\t\t<Home\n\t\t\tloading={loading}\n\t\t\tonResultSelect={onResultSelect}\n\t\t\tonSearchChange={onSearchChange}\n\t\t\tresults={results}\n\t\t\tvalue={value}\n\t\t\tactiveUser={activeUser}\n\t\t\tmessages={messages}\n\t\t\tuserOnClick={userOnClick}\n\t\t\tlogoutUser={logoutUser}\n\t\t\tsendMessage={sendMessage}\n\t\t\tdeSelectUser={deSelectUser}\n\t\t/>\n\t);\n}\n\nexport { HomeContainer };\n","import { useContext, useEffect } from \"react\";\n// importing the semantic ui css before all component\n// so that custom css will override this css\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.scss\";\nimport \"./styles/home.scss\";\nimport \"./styles/auth.scss\";\nimport {\n\tSwitch,\n\tRoute,\n\tBrowserRouter as Router,\n\tRedirect,\n} from \"react-router-dom\";\nimport { AuthContext } from \"./actions/auth/AuthContext\";\nimport { ActionTypes, AuthStatus } from \"./types/authTypes\";\nimport { AppLoader } from \"./components/AppLoader\";\nimport { LoginContainer } from \"./containers/LoginContainer\";\nimport { RegisterContainer } from \"./containers/RegisterContainer\";\nimport { HomeContainer } from \"./containers/HomeContainer\";\n\nconst App = () => {\n\tconst { authInfo, dispatch } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tconst authenticate = (showLoading = false) => {\n\t\t\tdispatch({\n\t\t\t\ttype: ActionTypes.AUTHENTICATE,\n\t\t\t\tpayload: {\n\t\t\t\t\tloading: showLoading,\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t\tauthenticate(true);\n\t\tconst interval = setInterval(authenticate, 1000 * 60 * 60);\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\tif (authInfo.authStatus === AuthStatus.AUTHENTICATION_LOADING)\n\t\treturn <AppLoader />;\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={HomeContainer} />\n\t\t\t\t<Route path=\"/login\" component={LoginContainer} />\n\t\t\t\t<Route path=\"/register\" component={RegisterContainer} />\n\t\t\t\t<Route path=\"/\" component={() => <Redirect to=\"/login\" />} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AuthProvider } from \"./actions/auth/AuthContext\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<AuthProvider>\n\t\t\t<App />\n\t\t</AuthProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}